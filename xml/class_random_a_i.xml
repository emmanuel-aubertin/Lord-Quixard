<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_random_a_i" kind="class" language="C++" prot="public">
    <compoundname>RandomAI</compoundname>
    <basecompoundref refid="class_player_a_i" prot="public" virt="non-virtual">PlayerAI</basecompoundref>
    <includes refid="_random_a_i_8hpp" local="no">RandomAI.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_random_a_i_1a6ac9154d82d1ce7d182ba740510e4844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RandomAI::RandomAI</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>RandomAI</name>
        <qualifiedname>RandomAI::RandomAI</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_random_a_i" kindref="compound">RandomAI</ref> object. Initializes the <ref refid="class_random_a_i" kindref="compound">RandomAI</ref> player with the given name. The constructor is currently placeholder for potential future features specific to <ref refid="class_random_a_i" kindref="compound">RandomAI</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="class_random_a_i" kindref="compound">RandomAI</ref> player. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Player/AIPlayer/RandomAI/RandomAI.hpp" line="10" column="5" bodyfile="src/Player/AIPlayer/RandomAI/RandomAI.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_random_a_i_1ad8b4911a60068bd576e8524dfb393fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; RandomAI::getPlay</definition>
        <argsstring>(GameBoard *, Tile::Sign) override</argsstring>
        <name>getPlay</name>
        <qualifiedname>RandomAI::getPlay</qualifiedname>
        <reimplements refid="class_player_a_i_1a2d60e5fb3d3d6a97bc73af0f43b5859e">getPlay</reimplements>
        <param>
          <type><ref refid="class_game_board" kindref="compound">GameBoard</ref> *</type>
        </param>
        <param>
          <type><ref refid="struct_tile_1aafb31e1fb33692cca3b88e4099247305" kindref="member">Tile::Sign</ref></type>
        </param>
        <briefdescription>
<para>Generates a random play for the AI player. Creates a random move using a uniform distribution. The move is determined by randomly selecting positions on the game board. If a randomly generated number is odd, the move is along the same row; otherwise, it&apos;s along the same column. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::vector&lt;int&gt; The AI player&apos;s randomly chosen move, represented as a vector {x, y, new_x, new_y}. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Player/AIPlayer/RandomAI/RandomAI.hpp" line="11" column="17" bodyfile="src/Player/AIPlayer/RandomAI/RandomAI.cpp" bodystart="26" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Player</label>
        <link refid="class_player"/>
      </node>
      <node id="2">
        <label>PlayerAI</label>
        <link refid="class_player_a_i"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>RandomAI</label>
        <link refid="class_random_a_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Player</label>
        <link refid="class_player"/>
      </node>
      <node id="2">
        <label>PlayerAI</label>
        <link refid="class_player_a_i"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>RandomAI</label>
        <link refid="class_random_a_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/Player/AIPlayer/RandomAI/RandomAI.hpp" line="7" column="1" bodyfile="src/Player/AIPlayer/RandomAI/RandomAI.hpp" bodystart="8" bodyend="12"/>
    <listofallmembers>
      <member refid="class_player_1af1aa472885d589516f483e26e786600e" prot="public" virt="non-virtual"><scope>RandomAI</scope><name>getName</name></member>
      <member refid="class_random_a_i_1ad8b4911a60068bd576e8524dfb393fa6" prot="public" virt="virtual"><scope>RandomAI</scope><name>getPlay</name></member>
      <member refid="class_player_1af9c920fabaafdeb7961a645315b521ff" prot="protected" virt="non-virtual"><scope>RandomAI</scope><name>name</name></member>
      <member refid="class_player_1a45fa04a2a4ff9235e6c100b7c6ab232a" prot="public" virt="non-virtual"><scope>RandomAI</scope><name>Player</name></member>
      <member refid="class_player_a_i_1a8a7d49d494914bbb3938934acbcd5912" prot="public" virt="non-virtual"><scope>RandomAI</scope><name>PlayerAI</name></member>
      <member refid="class_random_a_i_1a6ac9154d82d1ce7d182ba740510e4844" prot="public" virt="non-virtual"><scope>RandomAI</scope><name>RandomAI</name></member>
      <member refid="class_player_1a77cfdb8708c16a0726d5bdd9e7b356d1" prot="protected" virt="non-virtual"><scope>RandomAI</scope><name>setName</name></member>
      <member refid="class_player_1a11017c0ed8a639f3b1308ab167fbeca2" prot="public" virt="virtual"><scope>RandomAI</scope><name>~Player</name></member>
      <member refid="class_player_a_i_1a2f188586bb2be4ea74d67960dee2ef18" prot="public" virt="virtual"><scope>RandomAI</scope><name>~PlayerAI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
